openapi: 3.0.0
info:
  title: Task Management API
  version: 1.0.0
  description: API для управления задачами с возможностью создания, получения, обновления и удаления задач.
servers:
  - url: http://localhost:8000/
paths:
  /api/tasks:
    post:
      summary: Создает новую задачу
      operationId: createTask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  maxLength: 256
                  example: "Задача1"
                description:
                  type: string
                  example: "Задача1 описание"
                due_date:
                  type: string
                  format: date-time
                  example: "2025-01-20T15:00:00"
                create_date:
                  type: string
                  format: date-time
                  example: "2025-01-20T15:00:00"
                priority:
                  type: string
                  enum: [низкий, средний, высокий]
                  example: "высокий"
                category:
                  type: string
                  example: "Работа"
                status:
                  type: string
                  enum: [выполнена, не выполнена]
                  example: "не выполнена"
      responses:
        '201':
          description: Задача успешно создана
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  message:
                    type: string
                    example: "Task created successfully"
  
    get:
      summary: Получает список задач
      operationId: getTasks
      parameters:
        - in: query
          name: search
          schema:
            type: string
          description: Поиск по названию задачи
        - in: query
          name: sort
          schema:
            type: string
            enum: [due_date, created_at]
          description: Сортировка по дате выполнения или дате создания
        - in: query
          name: page
          schema:
            type: integer
          description: Номер страницы для постраничного получения результатов, сработает только при наличии корректного limit
        - in: query
          name: limit
          schema:
            type: integer
          description: Количество элементов на странице
      responses:
        '200':
          description: Список задач успешно возвращен
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        title:
                          type: string
                          example: "Задача1"
                        description:
                          type: string
                          example: "Задача1 описание"
                        due_date:
                          type: string
                          format: date-time
                          example: "2025-01-20T15:00:00"
                        create_date:
                          type: string
                          format: date-time
                          example: "2025-01-20T15:00:00"
                        status:
                          type: string
                          enum: [выполнена, не выполнена]
                          example: "не выполнена"
                        priority:
                          type: string
                          enum: [низкий, средний, высокий]
                          example: "высокий"
                        category:
                          type: string
                          example: "Работа"

  /api/tasks/{id}:
    get:
      summary: Получает конкретную задачу по ID
      operationId: getTaskById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID задачи
      responses:
        '200':
          description: Задача успешно возвращена
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: "Задача1"
                  description:
                    type: string
                    example: "Задача1 описание"
                  due_date:
                    type: string
                    format: date-time
                    example: "2025-01-20T15:00:00"
                  create_date:
                    type: string
                    format: date-time
                    example: "2025-01-20T15:00:00"
                  status:
                    type: string
                    enum: [выполнена, не выполнена]
                    example: "не выполнена"
                  priority:
                    type: string
                    enum: [низкий, средний, высокий]
                    example: "высокий"
                  category:
                    type: string
                    example: "Работа"

    put:
      summary: Обновляет информацию о задаче
      operationId: updateTask
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID задачи для обновления
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "Задача2"
                description:
                  type: string
                  example: "Задача2 описание обновленное"
                due_date:
                  type: string
                  format: date-time
                  example: "2025-01-25T18:00:00"
                priority:
                  type: string
                  enum: [низкий, средний, высокий]
                  example: "низкий"
                status:
                  type: string
                  enum: [выполнена, не выполнена]
                  example: "выполнена"
      responses:
        '200':
          description: Задача успешно обновлена
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Task updated successfully"

    delete:
      summary: Удаляет задачу по ID
      operationId: deleteTask
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID задачи для удаления
      responses:
        '200':
          description: Задача успешно удалена
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Task deleted successfully"